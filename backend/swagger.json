{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "Body O'Cloack",
        "description": "API para cadastro e agendamentos de hor√°rios",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "host": "localhost:3500",
    "basePath": "/",
    "tags": [
        {
            "name": "sign-un",
            "description": "rota de login"
        },
        {
            "name":"sign-up",
            "description": "rota de cadastro"
        },
        {
            "name":"update",
            "description":"rota de update de dados do user"
        },
        {
            "name":"coverage tests",
            "description": "graphics test"
        },
        {
            "name": "to provider",
            "description": "change users to providers"
        },
        {
            "name":"find user",
            "description":"find user by token"
        },
        {
            "name": "data provider",
            "description":"all data from the provider with a date as parameter"
        }
    ],
    "schemes": ["http"],
    "paths":{
        "/providers/provider_data":{
            "get":{
                "tags":["data provider"],
                "summary":"find all user data",
                "operationId":"dataProviderDate",
                "produces":["application/json"],
                "parameters": [{
                    "in": "query",
                    "name": "date",
                    "description":"date for filter",
                    "required": true,
                    "type": "string",
                    "minimum": 12
                }],
                "security":[
                    {
                        "Bearer": []
                    }
                ],
                "responses":{
                    "200":{
                        "description":"return datas",
                        "schema":{
                            "$ref":"#/definitions/status"
                        }
                    },
                    "400":{
                        "schema":{
                            "$ref":"#/definitions/status"
                        }
                    },
                    "401":{
                        "description":"token is not provided",
                        "schema":{
                            "$ref":"#/definitions/status"
                        }
                    }
                }
            }
        },
        "/users/user":{
            "get":{
                "tags":["find user"],
                "summary":"find all user data",
                "operationId":"getUser",
                "produces":["application/json"],
                "responses":{
                    "200":{
                        "description": "success and returns some json",
                        "schema":{
                            "$ref":"#/definitions/status"
                        }
                    }
                }
            }
        },
        "/users/update/provider":{
            "put":{
                "tags":["to provider"],
                "summary":"turn users into providers",
                "operationId":"userToProvider",
                "produces":["application/json"],
                "responses":{
                    "200":{
                        "description":"user changed",
                        "schema":{
                            "$ref":"#/definitions/status"
                        }
                    },
                    "400":{
                        "schema":{
                            "$ref":"#/definitions/status"
                        }
                    },
                    "401":{
                        "description":"token is not provided",
                        "schema":{
                            "$ref":"#/definitions/status"
                        }
                    }
                }
            }
        },
        "/coverage":{
            "get":{
                "tags":["coverage tests"],
                "summary":"page tests results",
                "operationId":"getTest",
                "produces":["text/html"],
                "responses":{
                    "200":{
                        "description": "success and returns some html text",
                        "examples":{
                            "text/html": "<html><body>Your HTML text</body></html>"
                        }
                    },
                    "400":{
                        "description":"validation fails",
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }
                }

            }
        },
        "/users/register":{
            "post":{
                "tags":["sign-up"],
                "summary": "register user",
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description":"data for create users",
                    "required": true,
                    "type": "string",
                    "minimum": 1,
                    "schema": {
                        "$ref": "#/definitions/register"
                    }
                }],
                "operationId":"userRegister",
                "consumes":["application/json", "multipart/form-data"],
                "produces":["application/json"],
                "responses":{
                    "200": {
                        "description": "create user",
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    },
                    "400":{
                        "description":"validation fails",
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/status"
                        }
                    }
                }
            }
        },
        "/users/login":{
            "post":{
                "tags":["sign-in"],
                "consumes":["application/json", "multipart/form-data"],
                "produces":["application/json"],
                "summary":"login user",
                "operationId":"userLogin",
                "parameters":[{
                    "in":"body",
                    "name":"body",
                    "description":"data for login user",
                    "required":true,
                    "type":"string",
                    "minimum":1,
                    "schema":{
                        "$ref":"#/definitions/login"
                    }
                }],
                "responses":{
                    "200":{
                        "description":"user logged",
                        "schema":{
                            "$ref":"#/definitions/status"
                        }
                    },
                    "400":{
                        "description":"validation fails",
                        "schema":{
                            "$ref":"#/definitions/status"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/status"
                        }
                    }
                }
            }
        },
        "/users/update":{
            "put":{
                "tags":["update"],
                "consumes":["multipart/form-data"],
                "produces":["application/json"],
                "summary":"update user",
                "operationId":"userUpdate",
                "parameters":[{
                    "name":"name",
                    "in":"formData",
                    "description":"The uploaded name data",
                    "required":false,
                    "type":"string"
                },{
                    "name":"email",
                    "in":"formData",
                    "description":"The uploaded email data",
                    "required":false,
                    "type":"string"
                },{
                    "name":"password",
                    "in":"formData",
                    "description":"The uploaded password data",
                    "required":false,
                    "type":"string"
                },{
                    "name":"confirmPassword",
                    "in":"formData",
                    "description":"The uploaded confirmPassword data",
                    "required":false,
                    "type":"string"
                },{
                    "name":"oldPassword",
                    "in":"formData",
                    "description":"The uploaded oldPassword data",
                    "required":false,
                    "type":"string"
                },{
                    "name": "file",
                    "in": "formData",
                    "description": "The uploaded file data",
                    "required": false,
                    "type": "file" 
                }],
                "security":[
                    {
                        "Bearer": []
                    }
                ],
                "responses":{
                    "200":{
                        "description":"user logged",
                        "schema":{
                            "$ref":"#/definitions/status"
                        }
                    },
                    "400":{
                        "description":"validation fails",
                        "schema":{
                            "$ref":"#/definitions/status"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/status"
                        }
                    }
                }
            }
        },
        "/users/delete":{
            "delete":{
                "tags":["delete"],
                "produces":["application/json"],
                "summary":"send token to delete user",
                "operationId":"userDelete",
                "security":[
                    {
                        "Bearer":[]
                    }
                ],
                "responses":{
                    "200":{
                        "description":"user logged",
                        "schema":{
                            "$ref":"#/definitions/status"
                        }
                    },
                    "400":{
                        "description":"validation fails",
                        "schema":{
                            "$ref":"#/definitions/status"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/status"
                        }
                    }
                }
            }
        },
        "/users":{
            "get":{
                "tags":["index users"],
                "produces":["application/json"],
                "summary":"index all user where provider equal false",
                "operationId":"indexUserWhereProviderFalse",
                "responses":{
                    "200":{
                        "description":"user logged",
                        "schema":{
                            "$ref":"#/definitions/status"
                        }
                    },
                    "400":{
                        "description":"validation fails",
                        "schema":{
                            "$ref":"#/definitions/status"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/status"
                        }
                    }
                }
            }
        },
        "/providers":{
            "get":{
                "tags":["index providers"],
                "produces":["application/json"],
                "summary":"index all user where provider equal true",
                "operationId":"indexUserWhereProviderTrue",
                "responses":{
                    "200":{
                        "description":"user logged",
                        "schema":{
                            "$ref":"#/definitions/status"
                        }
                    },
                    "400":{
                        "description":"validation fails",
                        "schema":{
                            "$ref":"#/definitions/status"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/status"
                        }
                    }
                }
            }
        },
        "/schedule/scheduling":{
            "post":{
                "tags":["scheduling"],
                "consumes":["application/json", "multipart/form-data"],
                "produces":["application/json"],
                "summary":"scheduling time with coach",
                "operationId":"appointmentUserWithCoach",
                "parameters":[{
                    "in":"body",
                    "name":"body",
                    "description":"data for login user",
                    "required":true,
                    "type":"string",
                    "minimum":1,
                    "schema":{
                        "$ref":"#/definitions/schedule"
                    }
                }],
                "responses":{
                    "200":{
                        "description":"user logged",
                        "schema":{
                            "$ref":"#/definitions/status"
                        }
                    },
                    "400":{
                        "description":"validation fails",
                        "schema":{
                            "$ref":"#/definitions/status"
                        }
                    },
                    "401":{
                        "description":"Unauthorized",
                        "schema":{
                            "$ref":"#/definitions/status"
                        }
                    }
                },
                "security":[
                    {
                        "Bearer":[]
                    }
                ]
            }
        }
    },
    "securityDefinitions":{
        "Bearer":{
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "definitions":{
        "update":{
            "properties":{
                "name":{
                    "type":"string"
                },
                "email":{
                    "type":"string",
                    "uniqueItems": true
                },
                "oldPassword":{
                    "type":"string"
                },
                "password":{
                    "type":"string"
                },
                "confirmPassword":{
                    "type":"string"
                }
            }
        },
        "register":{
            "properties":{
                "name":{
                    "type": "string"
                },
                "email":{
                    "type":"string",
                    "uniqueItems": true
                },
                "password":{
                    "type":"string"
                }
            }
        },
        "status":{
            "properties":{
                "status":{
                    "type":"string"
                },
                "message":{
                    "type":"string"
                }
            }
        },
        "login":{
            "properties":{
                "email":{
                    "type":"string",
                    "uniqueItems": true
                },
                "password":{
                    "type":"string"
                }
            }
        },
        "schedule":{
            "properties":{
                "provider_id":{
                    "type":"string"
                },
                "appointment":{
                    "type":"string",
                    "minimum":16
                }
            }
        }
    }
}